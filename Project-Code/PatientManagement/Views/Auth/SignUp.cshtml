@model PatientManagement.Models.PatientDetail

@{
    ViewBag.Title = "SignUp";
}

<div class="container login-container">
    <div class="row">
        <div class="col-md-6 mx-auto login-form-1">
            <h3 class="font-weight-bold text-themecolor">Tiffin Mangement</h3>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Gender", new List<SelectListItem>
                         {
                         new SelectListItem { Text = "Male", Value="Male" },
                         new SelectListItem { Text = "Female", Value="Female" }
                         }, "Select Gender", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Sign Up" class="btnSubmit btn-primary" />
                        </div>
                    </div>
                </div>
            }
            <div>
                @Html.ActionLink("Already have an account. Sign in here!", "SignIn", null, htmlAttributes: new { @class = "ForgetPwd  text-primary" })
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.0.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
