@model IPagedList<PatientManagement.Models.AppointmentDetail>
@using PagedList.Mvc;
@using PagedList;
<link href="~/Content/PagedList.css" rel="stylesheet" />

<div class="container my-3">
    <div class="card border-light mb-lg-5">
        <div class="card-body text-center">
            <div class="row">
                <div class="col-md-12">
                    <img class="img-responsive" src="~/Assets/Images/agenda.png" height="120" width="120" />
                </div>
                <div class="col-md-12 my-4">
                    <strong> @Html.ActionLink("Click here to book appointment", "Create", null, new { @class = "btn btn-lg btn-warning" })</strong>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="page-header my-2">
        <h3 id="tables">Appointment deatils. </h3>
    </div>
    <div class=" table-responsive ">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().SheduleDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().PatientDetail.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().DiseaseInfo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().AppointmentDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().AppointmentTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().SheduleUpdated)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.OrderBy(item => item.AppointmentDate))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SheduleDate)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PatientDetail.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiseaseInfo)
                    </td>

                    @if (item.AppointmentDate == DateTime.Today)
                    {
                        <td class="table-warning">Todays Appointment</td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(modelItem => item.AppointmentDate)</td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.AppointmentTime)
                    </td>
                    @if (item.SheduleUpdated == true)
                    {
                        <td class="table-danger">Yes</td>
                    }
                    else
                    {
                        <td class="table-success">No</td>
                    }

                    @if (item.AppointmentDate == DateTime.Today)
                    {
                        <td>
                            @Html.ActionLink("Treatment", "Create", "DoctorTreatment", new { id = item.AppointmentId }, new { @class = "btn btn-warning btn-sm my-1" })
                            @Html.ActionLink("Change", "Edit", new { id = item.AppointmentId }, new { @class = "btn btn-primary btn-sm" })
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.ActionLink("Change", "Edit", new { id = item.AppointmentId }, new { @class = "btn btn-primary btn-sm" })
                        </td>
                    }

                </tr>
            }

        </table>
    </div>
</div>
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    searchBy = Request.QueryString["searchBy"],
    search = Request.QueryString["search"],
    sortBy = Request["sortBy"]
}), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })
